{"version":3,"sources":["BotApi.js","panels/Home.js","panels/com_constructor/ComItemButton.js","panels/com_constructor/ComItem.js","panels/com_constructor/Text.js","panels/com_constructor/Post.js","panels/com_constructor/Media.js","panels/com_constructor/ComConstructor.js","App.js","index.js"],"names":["BotApi","url","xhr","XMLHttpRequest","open","encodeURIComponent","send","responseText","body","setRequestHeader","JSON","stringify","id","parse","this","queryGET","Home","props","state","dbinfo","getUser","userId","user","before","src","photo_200","description","Nick","first_name","last_name","size","level","onClick","go","data-to","React","Component","ComItemButton","setItem","bind","cc","setState","ps","item","name","status","disabled","mode","rusName","ComItem","selectItemType","setFieldHidden","changeField","e","v","target","value","type","length","n","currentTarget","isNaN","hidden","header","fields","Text","placeholder","onChange","Post","owner","number","Media","getIdsMap","addId","deleteId","changeId","checkIdsCount","ids","map","i","push","pop","count","idsItems","forEach","album","osName","platform","ComConstructor","comName","text","post","image","video","createCommand","changeName","validateEmpty","getAlert","validateStatus","validate","includes","arr","a","aa","trim","actions","title","autoclose","onClose","app","setPopout","error","prepareInt","Number","prepareArray","join","isExist","Name","Author","Id","Type","OwnerId","PostId","Image","AlbumId","Ids","Video","queryPOST","dataset","to","left","IOS","App","obj","bridge","fetchedUser","popout","activePanel","getParam","fetchData","key","p","window","location","search","match","RegExp","panel","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","getElementById"],"mappings":"ysBAqBeA,E,sGApBKC,GACZ,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAT,gEAAyEC,mBAAmBJ,KAAQ,GACpGC,EAAII,OACGJ,EAAIK,e,gCAGEN,EAAKO,GAClB,IAAIN,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,OAAT,iEAA2EC,mBAAmBJ,KAAQ,GACtGC,EAAIO,iBAAiB,eAAgB,oBACrCP,EAAII,KAAKI,KAAKC,UAAUH,IACjBN,EAAIK,e,8BAGAK,GACX,OAAOF,KAAKG,MAAMC,KAAKC,SAAL,0BAAiCH,S,KCsB5CI,E,kDA5Bd,WAAYC,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZC,OAAQnB,EAAOoB,QAAQH,EAAMI,SAHZ,E,qDAOT,IAAD,EACR,OACC,kBAAC,IAAD,CAAOT,GAAIE,KAAKG,MAAML,IACpBE,KAAKG,MAAMK,MACX,kBAAC,IAAD,KACC,kBAAC,IAAD,eACA,kBAAC,IAAD,CACCC,OAAQ,kBAAC,IAAD,CAAQC,IAAKV,KAAKG,MAAMK,KAAKG,YACrCC,YAAW,UAAEZ,KAAKI,MAAMC,OAAOQ,YAApB,QAA4B,+CAFxC,UAIKb,KAAKG,MAAMK,KAAKM,WAJrB,YAImCd,KAAKG,MAAMK,KAAKO,YAEnD,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,IAAIC,MAAM,IAAIC,QAASlB,KAAKG,MAAMgB,GAAIC,UAAQ,mBAA3D,kH,GArBYC,IAAMC,W,gGCuBVC,E,kDA5BX,aAAe,IAAD,8BACV,gBACKC,QAAU,EAAKA,QAAQC,KAAb,gBAFL,E,sDAKH,IAAD,OACNzB,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAEnB,OADAA,EAAG,EAAKzB,MAAM0B,KAAKC,MAAMC,QAAUH,EAAG,EAAKzB,MAAM0B,KAAKC,MAAMC,OACrDH,O,+BAKX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIZ,KAAK,IACLE,QAASlB,KAAKwB,QACdQ,SAAUhC,KAAKG,MAAM6B,SACrBC,KAAMjC,KAAKG,MAAM0B,KAAKE,OAAS,cAAgB,YAJnD,UAMQ/B,KAAKG,MAAM0B,KAAKE,OAAS,uCAAW,mDAN5C,YAM0D/B,KAAKG,MAAM0B,KAAKK,e,GAtB9Db,IAAMC,W,iBC0CnBa,E,kDAzCX,aAAe,IAAD,8BACV,gBACKC,eAAiB,EAAKA,eAAeX,KAApB,gBACtB,EAAKY,eAAiB,EAAKA,eAAeZ,KAApB,gBACtB,EAAKa,YAAc,EAAKA,YAAYb,KAAjB,gBAJT,E,2DAOCc,GAAI,IAAD,OACRC,EAAID,EAAEE,OAAOC,MACnB1C,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAEnB,OADA,EAAKxB,MAAMyB,KAAKc,KAAmB,GAAZH,EAAEI,OAAc,KAAOJ,EACvCZ,O,qCAIAe,GACX,QAAS3C,KAAKI,MAAMyB,KAAKc,MAAQA,K,kCAGzBJ,GAAI,IAAD,OACLM,EAAIN,EAAEO,cAAchB,KACpBU,EAAID,EAAEO,cAAcJ,MAC1B1C,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAInB,MAHS,IAALY,GAAgB,QAALK,GAAgBE,MAAMP,KACjC,EAAKpC,MAAMyB,KAAKgB,GAAKL,GAElBZ,O,+BAKX,OACI,kBAAC,IAAD,CACIoB,QAAShD,KAAKI,MAAMyB,KAAKE,OACzBkB,OAAQ,kBAAC,IAAD,CAAQhB,KAAK,aAAajC,KAAKI,MAAMyB,KAAKK,UACjDlC,KAAKkD,c,GApCA7B,IAAMC,WCqBb6B,E,kDAlBX,WAAYhD,GAAQ,IAAD,8BACf,gBACKC,MAAQ,CACTyB,KAAM1B,EAAM0B,MAHD,E,qDAQf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOc,KAAK,OAAOS,YAAY,4EAAgBtB,KAAK,OAAOuB,SAAUrD,KAAKsC,oB,GAZ3EH,GCiCJmB,E,kDAhCX,WAAYnD,GAAQ,IAAD,8BACf,gBACKC,MAAQ,CACTyB,KAAM1B,EAAM0B,MAHD,E,qDAQf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQuB,YAAY,sEAAeC,SAAUrD,KAAKoC,gBAC9C,4BAAQM,MAAM,MAAd,mBACA,4BAAQA,MAAM,QAAd,0DACA,4BAAQA,MAAM,UAAd,4EACA,4BAAQA,MAAM,UAAd,0HAGR,kBAAC,IAAD,CAAKM,OAAgC,MAAxBhD,KAAKI,MAAMyB,KAAKc,MACzB,kBAAC,IAAD,CAAOA,KAAK,OAAOS,YAAY,4DAAetB,KAAK,QAAQY,MAAO1C,KAAKI,MAAMyB,KAAK0B,MAAOF,SAAUrD,KAAKsC,eAE5G,kBAAC,IAAD,CAAKU,OAAQhD,KAAKqC,eAAe,OAC7B,kBAAC,IAAD,CAAOM,KAAK,OAAOS,YAAY,oCAAWtB,KAAK,KAAKY,MAAO1C,KAAKI,MAAMyB,KAAK/B,GAAIuD,SAAUrD,KAAKsC,eAElG,kBAAC,IAAD,CAAKU,OAAQhD,KAAKqC,eAAe,WAC7B,kBAAC,IAAD,CAAOM,KAAK,OAAOS,YAAY,8FAAmBtB,KAAK,SAASY,MAAO1C,KAAKI,MAAMyB,KAAK2B,OAAQH,SAAUrD,KAAKsC,oB,GA1B/GH,G,4BC8FJsB,G,kDA5FX,WAAYtD,GAAQ,IAAD,8BACf,gBACKC,MAAQ,CACTyB,KAAM1B,EAAM0B,MAEhB,EAAK6B,UAAY,EAAKA,UAAUjC,KAAf,gBACjB,EAAKkC,MAAQ,EAAKA,MAAMlC,KAAX,gBACb,EAAKmC,SAAW,EAAKA,SAASnC,KAAd,gBAChB,EAAKoC,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,cAAgB,EAAKA,cAAcrC,KAAnB,gBATN,E,2DAYJc,GACX,wEAAqBA,GACC,MAAlBA,EAAEE,OAAOC,OAA+C,GAA9B1C,KAAKI,MAAMyB,KAAKkC,IAAInB,OAC9C5C,KAAK2D,QACE3D,KAAKI,MAAMyB,KAAKkC,IAAInB,OAAS,GACpC5C,KAAK4D,a,+BAIJrB,GAAI,IAAD,OACFM,EAAIN,EAAEO,cAAchB,KACpBU,EAAID,EAAEO,cAAcJ,MAC1B1C,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAInB,MAHS,IAALY,GAAYO,MAAMP,KAClB,EAAKpC,MAAMyB,KAAKkC,IAAIlB,GAAKL,GAEtBZ,O,kCAIF,IAAD,OACR,OAAO5B,KAAKI,MAAMyB,KAAKkC,IAAIC,KAAI,SAAClE,EAAImE,GAAL,aAC3B,kBAAC,IAAD,CAAKjB,OAAQ,EAAKX,eAAe,OAC7B,kBAAC,KAAD,GACIP,KAAMmC,EACNvB,MAAO5C,EACP6C,KAAK,OACLS,YAAY,qFAJhB,uBAKW,EAAKhD,MAAMyB,KAAKkC,IAAIE,IAL/B,0BAMc,EAAKJ,UANnB,U,4BAYNtB,GAAI,IAAD,OACLvC,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAEnB,OADA,EAAKxB,MAAMyB,KAAKkC,IAAIG,KAAK,IAClBtC,O,+BAINW,GAAI,IAAD,OACRvC,KAAKG,MAAMuB,GAAGC,UAAS,SAAAC,GAEnB,OADA,EAAKxB,MAAMyB,KAAKkC,IAAII,MACbvC,O,sCAKX,IAAIwC,EAAQ,EAEZ,OADApE,KAAKG,MAAMuB,GAAG2C,SAASC,SAAQ,SAAAzC,GAAI,OAAIuC,GAASvC,EAAKkC,IAAInB,UAClDwB,EAAQ,K,+BAIf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQhB,YAAY,sEAAeC,SAAUrD,KAAKoC,gBAC9C,4BAAQM,MAAM,MAAd,mBACA,4BAAQA,MAAM,UAAd,4DAGR,kBAAC,IAAD,CAAKM,OAAgC,MAAxBhD,KAAKI,MAAMyB,KAAKc,MACzB,kBAAC,IAAD,CAAOA,KAAK,OAAOS,YAAY,4DAAetB,KAAK,QAAQY,MAAO1C,KAAKI,MAAMyB,KAAK0B,MAAOF,SAAUrD,KAAKsC,eAE5G,kBAAC,IAAD,CAAKU,OAAQhD,KAAKqC,eAAe,WAC7B,kBAAC,IAAD,CAAOM,KAAK,OAAOS,YAAY,gDAAatB,KAAK,QAAQY,MAAO1C,KAAKI,MAAMyB,KAAK0C,MAAOlB,SAAUrD,KAAKsC,eAEzGtC,KAAK0D,YACN,kBAAC,IAAD,CAAKV,OAAQhD,KAAKqC,eAAe,OAC7B,kBAAC,IAAD,CAAQrB,KAAK,IAAIgB,UAAWhC,KAAK8D,gBAAiB5C,QAASlB,KAAK2D,OAAhE,uDACA,kBAAC,IAAD,CAAQ3C,KAAK,IAAIgB,SAAUhC,KAAKI,MAAMyB,KAAKkC,IAAInB,QAAU,EAAG1B,QAASlB,KAAK4D,UAA1E,uD,GAtFAzB,GCadqC,GAASC,cAoOAC,G,kDAjOX,aAAe,IAAD,8BACV,gBACKtE,MAAQ,CACTuE,QAAS,GACTC,KAAM,CACF9C,KAAM,OACNI,QAAS,iCACTH,QAAQ,EACR6C,KAAM,IAEVC,KAAM,CACF/C,KAAM,OACNI,QAAS,2BACTH,QAAQ,EACRY,KAAM,KACNY,MAAO,GACPzD,GAAI,GACJ0D,OAAQ,IAEZsB,MAAO,CACHhD,KAAM,QACNI,QAAS,qEACTH,QAAQ,EACRY,KAAM,KACNY,MAAO,GACPgB,MAAO,GACPR,IAAK,IAETgB,MAAO,CACHjD,KAAM,QACNI,QAAS,iCACTH,QAAQ,EACRY,KAAM,KACNY,MAAO,GACPgB,MAAO,GACPR,IAAK,KAGb,EAAKM,SAAW,CAAC,EAAKjE,MAAM0E,MAAO,EAAK1E,MAAM2E,OAC9C,EAAKC,cAAgB,EAAKA,cAAcvD,KAAnB,gBACrB,EAAKwD,WAAa,EAAKA,WAAWxD,KAAhB,gBAClB,EAAKyD,cAAgB,EAAKA,cAAczD,KAAnB,gBACrB,EAAK0D,SAAW,EAAKA,SAAS1D,KAAd,gBAChB,EAAK2D,eAAiB,EAAKA,eAAe3D,KAApB,gBACtB,EAAK4D,SAAW,EAAKA,SAAS5D,KAAd,gBA5CN,E,uDA+CHc,GAAI,IAAD,OACJC,EAAID,EAAEO,cAAcJ,MAC1B1C,KAAK2B,UAAS,SAAAC,GAIV,OAHKY,EAAE8C,SAAS,MAAS9C,EAAE8C,SAAS,QAChC,EAAKlF,MAAMuE,QAAUnC,GAElBZ,O,uCAKX,IAAM2D,EAAM,CACRvF,KAAKI,MAAMwE,KACX5E,KAAKI,MAAMyE,KACX7E,KAAKI,MAAM0E,MACX9E,KAAKI,MAAM2E,OAEf,IAAK,IAAIS,KAAKD,EAAK,CAEf,GADWA,EAAIC,GACRzD,OACH,OAAO,EAGf,OAAO,I,sCAIP,IAAMwD,EAAM,GAIZ,GAHIvF,KAAKI,MAAMwE,KAAK7C,QAChBwD,EAAIrB,KAAKlE,KAAKI,MAAMwE,KAAKA,MAEzB5E,KAAKI,MAAMyE,KAAK9C,OAEhB,OADAwD,EAAIrB,KAAKlE,KAAKI,MAAMyE,KAAKtB,OAClBvD,KAAKI,MAAMyE,KAAKlC,MACnB,IAAK,KAAM4C,EAAIrB,KAAKlE,KAAKI,MAAMyE,KAAK/E,IAAK,MACzC,IAAK,SAAUyF,EAAIrB,KAAKlE,KAAKI,MAAMyE,KAAKrB,QAGhD,GAAIxD,KAAKI,MAAM0E,MAAM/C,SACjBwD,EAAIrB,KAAKlE,KAAKI,MAAM0E,MAAMvB,OACI,OAA1BvD,KAAKI,MAAM0E,MAAMnC,MACjB,IAAK,IAAI6C,KAAKxF,KAAKI,MAAM0E,MAAMf,IAC3BwB,EAAIrB,KAAKlE,KAAKI,MAAM0E,MAAMf,IAAIyB,IAI1C,GAAIxF,KAAKI,MAAM2E,MAAMhD,SACjBwD,EAAIrB,KAAKlE,KAAKI,MAAM2E,MAAMxB,OACI,OAA1BvD,KAAKI,MAAM2E,MAAMpC,MACjB,IAAK,IAAI6C,KAAKxF,KAAKI,MAAM2E,MAAMhB,IAC3BwB,EAAIrB,KAAKlE,KAAKI,MAAM2E,MAAMhB,IAAIyB,IAI1C,IAAK,IAAIA,KAAKD,EAAK,CACf,IAAME,EAAKF,EAAIC,GACf,GAAU,MAANC,GAA2B,IAAbA,EAAGC,OACjB,OAAO,EAGf,OAAO,I,+BAGFd,GAAO,IAAD,OACX,OACI,kBAAC,IAAD,CACIe,QAAS,CAAC,CACNC,MAAO,eACP3D,KAAM,SACN4D,WAAW,IAEfC,QAAS,kBAAM,EAAK3F,MAAM4F,IAAIC,UAAU,QAExC,2BAAIpB,M,iCAKJ,IAAD,OACDqB,EAAQ,SAAArB,GAAI,OAAI,EAAKzE,MAAM4F,IAAIC,UAAU,EAAKb,SAASP,KAE7D,OAA0B,MAAtB5E,KAAKI,MAAMuE,SAAgD,IAA7B3E,KAAKI,MAAMuE,QAAQe,OAC1CO,EAAM,0MAEZjG,KAAKoF,iBAGLpF,KAAKkF,qBAIVlF,KAAKgF,gBAHMiB,EAAM,oHAHNA,EAAM,0L,sCASJ,IAAD,OACNC,EAAa,SAAAV,GAAC,OAAIW,OAAM,OAACX,QAAD,IAACA,IAAK,IAC9BY,EAAe,SAAAZ,GAAC,OAAIA,EAAExB,KAAI,SAAAlE,GAAE,cAAIA,QAAJ,IAAIA,IAAM,KAAGuG,KAAK,MAC9CC,EAAU,SAAAd,GAAC,OAAc,MAAVA,EAAE7C,MAAgB6C,EAAE7C,KAAKC,OAAS,GAEnDlD,EAAO,CACP6G,KAAMvG,KAAKI,MAAMuE,QACjBxB,KAAMnD,KAAKI,MAAMwE,KAAKA,KACtB4B,OAAQ,CACJC,GAAIP,EAAWlG,KAAKG,MAAMI,SAE9B+C,KAAMgD,EAAQtG,KAAKI,MAAMyE,MAAQ,CAC7B6B,KAAM1G,KAAKI,MAAMyE,KAAKlC,KACtBgE,QAAST,EAAWlG,KAAKI,MAAMyE,KAAKtB,OACpCqD,OAAQV,EAAWlG,KAAKI,MAAMyE,KAAK/E,IACnCqG,OAAQD,EAAWlG,KAAKI,MAAMyE,KAAKrB,SACnC,KACJqD,MAAOP,EAAQtG,KAAKI,MAAM0E,OAAS,CAC/B4B,KAAM1G,KAAKI,MAAM0E,MAAMnC,KACvBgE,QAAST,EAAWlG,KAAKI,MAAM0E,MAAMvB,OACrCuD,QAASZ,EAAWlG,KAAKI,MAAM0E,MAAMP,OACrCwC,IAAKX,EAAapG,KAAKI,MAAM0E,MAAMf,MACnC,KACJiD,MAAOV,EAAQtG,KAAKI,MAAM2E,OAAS,CAC/B2B,KAAM1G,KAAKI,MAAM2E,MAAMpC,KACvBgE,QAAST,EAAWlG,KAAKI,MAAM2E,MAAMxB,OACrCuD,QAASZ,EAAWlG,KAAKI,MAAM2E,MAAMR,OACrCwC,IAAKX,EAAapG,KAAKI,MAAM2E,MAAMhB,MACnC,MAER7E,EAAO+H,UAAU,iBAAkBvH,GAEnCM,KAAKG,MAAM4F,IAAI5E,GAAG,CAAC2B,cAAe,CAAEoE,QAAS,CAAEC,GAAI,WACnDnH,KAAKG,MAAM4F,IAAIC,UACX,kBAAC,IAAD,CACIL,QAAS,CAAC,CACNC,MAAO,eACP3D,KAAM,SACN4D,WAAW,IAEfC,QAAS,kBAAM,EAAK3F,MAAM4F,IAAIC,UAAU,QAExC,yH,+BAMR,OACI,kBAAC,IAAD,CAAOlG,GAAIE,KAAKG,MAAML,IAClB,kBAAC,IAAD,CACIsH,KAAM,kBAAC,IAAD,CAAmBlG,QAASlB,KAAKG,MAAMgB,GAAIC,UAAQ,QACpDoD,KAAW6C,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAFlD,oHAKA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOpE,OAAQ,kBAAC,IAAD,CAAQhB,KAAK,aAAb,+HACX,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAOU,KAAK,OAAOS,YAAY,8FAAmBV,MAAO1C,KAAKI,MAAMuE,QAAStB,SAAUrD,KAAKiF,eAErG,kBAAC,EAAD,CAAMvD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAMwE,OACjC,kBAAC,EAAD,CAAMlD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAMyE,OACjC,kBAAC,GAAD,CAAOnD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAM0E,QAClC,kBAAC,GAAD,CAAOpD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAM2E,UAG1C,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAerD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAMwE,OAC1C,kBAAC,EAAD,CAAelD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAMyE,OAC1C,kBAAC,EAAD,CAAenD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAM0E,QAC1C,kBAAC,EAAD,CAAepD,GAAI1B,KAAM6B,KAAM7B,KAAKI,MAAM2E,SAE9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ/D,KAAK,KAAKE,QAASlB,KAAKqF,UAAhC,iG,GAzNChE,IAAMC,WC6EpBgG,G,kDAvDd,aAAe,IAAD,8CAWb,WAAyBC,GAAzB,eAAA/B,EAAA,sEACoBgC,IAAOhI,KAAK,uBADhC,OACOgB,EADP,OAEC+G,EAAI5F,UAAS,SAAAC,GAGX,OAFAA,EAAG6F,YAAcjH,EACjBoB,EAAG8F,OAAS,KACL9F,KALV,4CAXa,kDACb,gBACKxB,MAAQ,CACZqH,YAAa,KACbE,YAAa,OACbD,OAAQ,kBAAC,IAAD,CAAe1G,KAAK,WAE7B,EAAK4G,SAAW,EAAKA,SAASnG,KAAd,gBAChB,EAAKN,GAAK,EAAKA,GAAGM,KAAR,gBACV,EAAKuE,UAAY,EAAKA,UAAUvE,KAAf,gBATJ,oCAmBXoG,CAAU,gBAnBC,E,qDAsBLC,GACR,IAAIC,EAAIC,OAAOC,SAASC,OAExB,SADAH,EAAIA,EAAEI,MAAM,IAAIC,OAAON,EAAM,gBAClBC,EAAE,K,yBAGXxF,GACF,IAAM8F,EAAQ9F,EAAEO,cAAcoE,QAAQC,GACtCnH,KAAK2B,UAAS,SAAAC,GAEb,OADAA,EAAG+F,YAAcU,EACVzG,O,gCAIC8F,GACT1H,KAAK2B,UAAS,SAAAC,GAEb,OADAA,EAAG8F,OAASA,EACL9F,O,+BAKR,IAAMrB,EAASP,KAAK4H,SAAS,WAE7B,OACC,kBAAC,IAAD,CAAMD,YAAa3H,KAAKI,MAAMuH,YAAaD,OAAQ1H,KAAKI,MAAMsH,QAC7D,kBAAC,EAAD,CAAM5H,GAAG,OAAOU,KAAMR,KAAKI,MAAMqH,YAAatG,GAAInB,KAAKmB,GAAIZ,OAAQA,EAAQwF,IAAK/F,OAChF,kBAAC,GAAD,CAAgBF,GAAG,kBAAkBqB,GAAInB,KAAKmB,GAAIZ,OAAQA,EAAQwF,IAAK/F,Y,GAlDzDqB,IAAMC,WCnCxBkG,IAAOhI,KAAK,gBAEZgI,IAAOc,WAAU,YAAiC,IAAD,IAA7BC,OAAU5F,EAAmB,EAAnBA,KAAM6F,EAAa,EAAbA,KAClC,GAAa,yBAAT7F,EAAiC,CACnC,IAAM8F,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgB/F,MAAQ8F,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAAShJ,KAAKmJ,WAAWC,aAAaL,OAI1CM,IAASC,OAAO,kBAAC,GAAD,MAASN,SAASO,eAAe,W","file":"static/js/main.39c220a6.chunk.js","sourcesContent":["class BotApi {\r\n    static queryGET(url) {\r\n        var xhr = new XMLHttpRequest()\r\n        xhr.open('GET', `https://pavlentygood.fvds.ru/query.php?method=GET&url=${encodeURIComponent(url)}`, false)\r\n        xhr.send()\r\n        return xhr.responseText\r\n    }\r\n\r\n    static queryPOST(url, body) {\r\n        var xhr = new XMLHttpRequest()\r\n        xhr.open('POST', `https://pavlentygood.fvds.ru/query.php?method=POST&url=${encodeURIComponent(url)}`, false)\r\n        xhr.setRequestHeader('Content-Type', 'application/json')\r\n        xhr.send(JSON.stringify(body))\r\n        return xhr.responseText\r\n    }\r\n\r\n    static getUser(id) {\r\n        return JSON.parse(this.queryGET(`app_info?userId=${id}`))\r\n    }\r\n}\r\n\r\nexport default BotApi\r\n","import React from 'react'\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell'\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar'\nimport BotApi from '../BotApi'\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tdbinfo: BotApi.getUser(props.userId)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t{this.props.user &&\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<PanelHeader>RoyBot</PanelHeader>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={<Avatar src={this.props.user.photo_200} />}\n\t\t\t\t\t\t\tdescription={this.state.dbinfo.Nick ?? 'Нет ника'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{`${this.props.user.first_name} ${this.props.user.last_name}`}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button size=\"l\" level=\"2\" onClick={this.props.go} data-to=\"com_constructor\">Конструктор команд</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t)\n\t}\n}\n\nexport default Home\n","import React from 'react'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\n\r\nclass ComItemButton extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.setItem = this.setItem.bind(this)\r\n    }\r\n\r\n    setItem() {\r\n        this.props.cc.setState(ps => {\r\n            ps[this.props.item.name].status = !ps[this.props.item.name].status\r\n            return ps\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Div>\r\n                <Button\r\n                    size=\"l\"\r\n                    onClick={this.setItem}\r\n                    disabled={this.props.disabled}\r\n                    mode={this.props.item.status ? \"destructive\" : \"commerce\"}\r\n                >\r\n                    {`${this.props.item.status ? 'Убрать' : 'Добавить'} ${this.props.item.rusName}`}\r\n                </Button>\r\n            </Div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComItemButton\r\n","import React from 'react'\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\n\r\nclass ComItem extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.selectItemType = this.selectItemType.bind(this)\r\n        this.setFieldHidden = this.setFieldHidden.bind(this)\r\n        this.changeField = this.changeField.bind(this)\r\n    }\r\n\r\n    selectItemType(e) {\r\n        const v = e.target.value\r\n        this.props.cc.setState(ps => {\r\n            this.state.item.type = v.length == 0 ? null : v\r\n            return ps\r\n        })\r\n    }\r\n\r\n    setFieldHidden(type) {\r\n        return !(this.state.item.type == type)\r\n    }\r\n\r\n    changeField(e) {\r\n        const n = e.currentTarget.name\r\n        const v = e.currentTarget.value\r\n        this.props.cc.setState(ps => {\r\n            if (v == '' || n == 'text' || !isNaN(v)) {\r\n                this.state.item[n] = v\r\n            }\r\n            return ps\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Group\r\n                hidden={!this.state.item.status}\r\n                header={<Header mode=\"secondary\">{this.state.item.rusName}</Header>}>\r\n                {this.fields()}\r\n            </Group>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComItem\r\n","import React from 'react'\r\nimport { Input, Select } from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport ComItem from './ComItem'\r\n\r\nclass Text extends ComItem {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            item: props.item\r\n        }\r\n    }\r\n\r\n    fields() {\r\n        return (\r\n            <List>\r\n                <Div>\r\n                    <Input type=\"text\" placeholder=\"Текст команды\" name=\"text\" onChange={this.changeField} />\r\n                </Div>\r\n            </List>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text\r\n","import React from 'react'\r\nimport { Input, Select } from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport ComItem from './ComItem'\r\n\r\nclass Post extends ComItem {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            item: props.item\r\n        }\r\n    }\r\n\r\n    fields() {\r\n        return (\r\n            <List>\r\n                <Div>\r\n                    <Select placeholder=\"Выберите тип\" onChange={this.selectItemType}>\r\n                        <option value=\"id\">По ID</option>\r\n                        <option value=\"last\">Последний</option>\r\n                        <option value=\"pinned\">Закрепленный</option>\r\n                        <option value=\"number\">По порядковому номеру</option>\r\n                    </Select>\r\n                </Div>\r\n                <Div hidden={this.state.item.type == null}>\r\n                    <Input type=\"text\" placeholder=\"ID владельца\" name=\"owner\" value={this.state.item.owner} onChange={this.changeField} />\r\n                </Div>\r\n                <Div hidden={this.setFieldHidden('id')}>\r\n                    <Input type=\"text\" placeholder=\"ID поста\" name=\"id\" value={this.state.item.id} onChange={this.changeField} />\r\n                </Div>\r\n                <Div hidden={this.setFieldHidden('number')}>\r\n                    <Input type=\"text\" placeholder=\"Порядковый номер\" name=\"number\" value={this.state.item.number} onChange={this.changeField} />\r\n                </Div>\r\n            </List>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Input, Select } from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport ComItem from './ComItem'\r\n\r\nclass Media extends ComItem {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            item: props.item\r\n        }\r\n        this.getIdsMap = this.getIdsMap.bind(this)\r\n        this.addId = this.addId.bind(this)\r\n        this.deleteId = this.deleteId.bind(this)\r\n        this.changeId = this.changeId.bind(this)\r\n        this.checkIdsCount = this.checkIdsCount.bind(this)\r\n    }\r\n\r\n    selectItemType(e) {\r\n        super.selectItemType(e)\r\n        if (e.target.value == 'id' && this.state.item.ids.length == 0) {\r\n            this.addId()\r\n        } else if (this.state.item.ids.length > 0) {\r\n            this.deleteId()\r\n        }\r\n    }\r\n\r\n    changeId(e) {\r\n        const n = e.currentTarget.name\r\n        const v = e.currentTarget.value\r\n        this.props.cc.setState(ps => {\r\n            if (v == '' || !isNaN(v)) {\r\n                this.state.item.ids[n] = v\r\n            }\r\n            return ps\r\n        })\r\n    }\r\n\r\n    getIdsMap() {\r\n        return this.state.item.ids.map((id, i) => (\r\n            <Div hidden={this.setFieldHidden('id')}>\r\n                <Input\r\n                    name={i}\r\n                    value={id}\r\n                    type=\"text\"\r\n                    placeholder=\"ID медиавложения\"\r\n                    value={this.state.item.ids[i]}\r\n                    onChange={this.changeId}\r\n                />\r\n            </Div>\r\n        ))\r\n    }\r\n\r\n    addId(e) {\r\n        this.props.cc.setState(ps => {\r\n            this.state.item.ids.push('')\r\n            return ps\r\n        })\r\n    }\r\n\r\n    deleteId(e) {\r\n        this.props.cc.setState(ps => {\r\n            this.state.item.ids.pop()\r\n            return ps\r\n        })\r\n    }\r\n\r\n    checkIdsCount() {\r\n        var count = 0\r\n        this.props.cc.idsItems.forEach(item => count += item.ids.length)\r\n        return count < 10\r\n    }\r\n\r\n    fields() {\r\n        return (\r\n            <List>\r\n                <Div>\r\n                    <Select placeholder=\"Выберите тип\" onChange={this.selectItemType}>\r\n                        <option value=\"id\">По ID</option>\r\n                        <option value=\"random\">Случайное</option>\r\n                    </Select>\r\n                </Div>\r\n                <Div hidden={this.state.item.type == null}>\r\n                    <Input type=\"text\" placeholder=\"ID владельца\" name=\"owner\" value={this.state.item.owner} onChange={this.changeField} />\r\n                </Div>\r\n                <Div hidden={this.setFieldHidden('random')}>\r\n                    <Input type=\"text\" placeholder=\"ID альбома\" name=\"album\" value={this.state.item.album} onChange={this.changeField} />\r\n                </Div>\r\n                {this.getIdsMap()}\r\n                <Div hidden={this.setFieldHidden('id')}>\r\n                    <Button size=\"m\" disabled={!this.checkIdsCount()} onClick={this.addId}>Добавить ID</Button>\r\n                    <Button size=\"m\" disabled={this.state.item.ids.length <= 1} onClick={this.deleteId}>Удалить ID</Button>\r\n                </Div>\r\n            </List>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Media\r\n","import React from 'react'\r\nimport { platform, IOS, RangeSlider } from '@vkontakte/vkui'\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back'\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back'\r\nimport { FormLayout, FormLayoutGroup, Input, Select } from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\r\nimport View from '@vkontakte/vkui/dist/components/View/View'\r\nimport ComItemButton from './ComItemButton'\r\nimport Text from './Text'\r\nimport Post from './Post'\r\nimport Media from './Media'\r\nimport BotApi from '../../BotApi'\r\n\r\nconst osName = platform()\r\n\r\nclass ComConstructor extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            comName: '',\r\n            text: {\r\n                name: 'text',\r\n                rusName: 'текст',\r\n                status: false,\r\n                text: '',\r\n            },\r\n            post: {\r\n                name: 'post',\r\n                rusName: 'пост',\r\n                status: false,\r\n                type: null,\r\n                owner: '',\r\n                id: '',\r\n                number: '',\r\n            },\r\n            image: {\r\n                name: 'image',\r\n                rusName: 'изображение',\r\n                status: false,\r\n                type: null,\r\n                owner: '',\r\n                album: '',\r\n                ids: [],\r\n            },\r\n            video: {\r\n                name: 'video',\r\n                rusName: 'видео',\r\n                status: false,\r\n                type: null,\r\n                owner: '',\r\n                album: '',\r\n                ids: [],\r\n            }\r\n        }\r\n        this.idsItems = [this.state.image, this.state.video]\r\n        this.createCommand = this.createCommand.bind(this)\r\n        this.changeName = this.changeName.bind(this)\r\n        this.validateEmpty = this.validateEmpty.bind(this)\r\n        this.getAlert = this.getAlert.bind(this)\r\n        this.validateStatus = this.validateStatus.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    changeName(e) {\r\n        const v = e.currentTarget.value\r\n        this.setState(ps => {\r\n            if (!v.includes(' ') && !v.includes('\\n')) {\r\n                this.state.comName = v\r\n            }\r\n            return ps\r\n        })\r\n    }\r\n\r\n    validateStatus() {\r\n        const arr = [\r\n            this.state.text,\r\n            this.state.post,\r\n            this.state.image,\r\n            this.state.video,\r\n        ]\r\n        for (var a in arr) {\r\n            const aa = arr[a]\r\n            if (aa.status) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    validateEmpty() {\r\n        const arr = []\r\n        if (this.state.text.status) {\r\n            arr.push(this.state.text.text)\r\n        }\r\n        if (this.state.post.status) {\r\n            arr.push(this.state.post.owner);\r\n            switch(this.state.post.type) {\r\n                case 'id': arr.push(this.state.post.id); break;\r\n                case 'number': arr.push(this.state.post.number); break;\r\n            }\r\n        }\r\n        if (this.state.image.status) {\r\n            arr.push(this.state.image.owner);\r\n            if (this.state.image.type === 'id') {\r\n                for (var a in this.state.image.ids) {\r\n                    arr.push(this.state.image.ids[a])\r\n                }\r\n            }\r\n        }\r\n        if (this.state.video.status) {\r\n            arr.push(this.state.video.owner);\r\n            if (this.state.video.type === 'id') {\r\n                for (var a in this.state.video.ids) {\r\n                    arr.push(this.state.video.ids[a])\r\n                }\r\n            }\r\n        }\r\n        for (var a in arr) {\r\n            const aa = arr[a]\r\n            if (aa == null || aa.trim() == '') {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    getAlert(text) {\r\n        return (\r\n            <Alert\r\n                actions={[{\r\n                    title: 'ОК',\r\n                    mode: 'cancel',\r\n                    autoclose: true,\r\n                }]}\r\n                onClose={() => this.props.app.setPopout(null)}\r\n            >\r\n                <p>{text}</p>\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    validate() {\r\n        const error = text => this.props.app.setPopout(this.getAlert(text))\r\n\r\n        if (this.state.comName == null || this.state.comName.trim() == '') {\r\n            return error('Название команды не может быть пустым!')\r\n        }\r\n        if (!this.validateStatus()) {\r\n            return error('Ответ команды не может быть пустым!')\r\n        }\r\n        if (!this.validateEmpty()) {\r\n            return error('Не все поля заполнены!')\r\n        }\r\n\r\n        this.createCommand()\r\n    }\r\n\r\n    createCommand() {\r\n        const prepareInt = a => Number(a ?? 0)\r\n        const prepareArray = a => a.map(id => id ?? 0).join(' ')\r\n        const isExist = a => a.type != null && a.type.length > 0\r\n\r\n        var body = {\r\n            Name: this.state.comName,\r\n            Text: this.state.text.text,\r\n            Author: {\r\n                Id: prepareInt(this.props.userId)\r\n            },\r\n            Post: isExist(this.state.post) ? {\r\n                Type: this.state.post.type,\r\n                OwnerId: prepareInt(this.state.post.owner),\r\n                PostId: prepareInt(this.state.post.id),\r\n                Number: prepareInt(this.state.post.number),\r\n            } : null,\r\n            Image: isExist(this.state.image) ? {\r\n                Type: this.state.image.type,\r\n                OwnerId: prepareInt(this.state.image.owner),\r\n                AlbumId: prepareInt(this.state.image.album),\r\n                Ids: prepareArray(this.state.image.ids),\r\n            } : null,\r\n            Video: isExist(this.state.video) ? {\r\n                Type: this.state.video.type,\r\n                OwnerId: prepareInt(this.state.video.owner),\r\n                AlbumId: prepareInt(this.state.video.album),\r\n                Ids: prepareArray(this.state.video.ids),\r\n            } : null\r\n        }\r\n        BotApi.queryPOST('create_command', body)\r\n\r\n        this.props.app.go({currentTarget: { dataset: { to: 'home'}}})\r\n        this.props.app.setPopout(\r\n            <Alert\r\n                actions={[{\r\n                    title: 'ОК',\r\n                    mode: 'cancel',\r\n                    autoclose: true,\r\n                }]}\r\n                onClose={() => this.props.app.setPopout(null)}\r\n            >\r\n                <p>Команда создана!</p>\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Panel id={this.props.id}>\r\n                <PanelHeader\r\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"home\">\r\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\r\n                    </PanelHeaderButton>}\r\n                >RoyBot | Конструктор команд</PanelHeader>\r\n                <FormLayout>\r\n                    <FormLayoutGroup>\r\n                        <Group header={<Header mode=\"secondary\">Создание новой команды</Header>}>\r\n                            <Div><Input type=\"text\" placeholder=\"Название команды\" value={this.state.comName} onChange={this.changeName} /></Div>\r\n                        </Group>\r\n                        <Text cc={this} item={this.state.text} />\r\n                        <Post cc={this} item={this.state.post} />\r\n                        <Media cc={this} item={this.state.image} />\r\n                        <Media cc={this} item={this.state.video} />\r\n                    </FormLayoutGroup>\r\n                </FormLayout>\r\n                <Div>\r\n                    <Group>\r\n                        <ComItemButton cc={this} item={this.state.text} />\r\n                        <ComItemButton cc={this} item={this.state.post} />\r\n                        <ComItemButton cc={this} item={this.state.image} />\r\n                        <ComItemButton cc={this} item={this.state.video} />\r\n                    </Group>\r\n                    <Group>\r\n                        <Div>\r\n                            <Button size=\"xl\" onClick={this.validate}>Создать команду</Button>\r\n                        </Div>\r\n                    </Group>\r\n                </Div>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComConstructor\r\n","import React from 'react'\nimport bridge from '@vkontakte/vk-bridge'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport Home from './panels/Home'\nimport ComConstructor from './panels/com_constructor/ComConstructor'\n\n// const App = () => {\n// \tconst [activePanel, setActivePanel] = useState('home')\n// \tconst [fetchedUser, setUser] = useState(null)\n// \tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />)\n\n// \tuseEffect(() => {\n// \t\tbridge.subscribe(({ detail: { type, data }}) => {\n// \t\t\tif (type === 'VKWebAppUpdateConfig') {\n// \t\t\t\tconst schemeAttribute = document.createAttribute('scheme')\n// \t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light'\n// \t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute)\n// \t\t\t}\n// \t\t});\n// \t\tasync function fetchData() {\n// \t\t\tconst user = await bridge.send('VKWebAppGetUserInfo')\n// \t\t\tsetUser(user)\n// \t\t\tsetPopout(null)\n// \t\t}\n// \t\tfetchData()\n// \t}, []);\n\n// \tconst go = e => {\n// \t\tsetActivePanel(e.currentTarget.dataset.to)\n// \t};\n\n// \tconst userId = getParam('user_id')\n\n// \treturn (\n// \t\t<View activePanel={activePanel} popout={popout}>\n// \t\t\t<Home id='home' user={fetchedUser} go={go} userId={userId} />\n// \t\t\t<ComConstructor id='com_constructor' go={go} userId={userId} />\n// \t\t</View>\n// \t);\n// }\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t\tactivePanel: 'home',\n\t\t\tpopout: <ScreenSpinner size='large' />\n\t\t}\n\t\tthis.getParam = this.getParam.bind(this)\n\t\tthis.go = this.go.bind(this)\n\t\tthis.setPopout = this.setPopout.bind(this)\n\n\t\tasync function fetchData(obj) {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo')\n\t\t\tobj.setState(ps => {\n\t\t\t  ps.fetchedUser = user\n\t\t\t  ps.popout = null\n\t\t\t  return ps\n\t\t\t})\n\t\t  }\n\t\t  fetchData(this)\n\t}\n\n\tgetParam(key) {\n\t\tvar p = window.location.search\n\t\tp = p.match(new RegExp(key + '=([^&=]+)'))\n\t\treturn p ? p[1] : false\n\t}\n\n\tgo(e) {\n\t\tconst panel = e.currentTarget.dataset.to\n\t\tthis.setState(ps => {\n\t\t\tps.activePanel = panel\n\t\t\treturn ps\n\t\t})\n\t}\n\n\tsetPopout(popout) {\n\t\tthis.setState(ps => {\n\t\t\tps.popout = popout\n\t\t\treturn ps\n\t\t})\n\t}\n\n\trender() {\n\t\tconst userId = this.getParam('user_id')\n\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t<Home id='home' user={this.state.fetchedUser} go={this.go} userId={userId} app={this} />\n\t\t\t\t<ComConstructor id='com_constructor' go={this.go} userId={userId} app={this} />\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nexport default App\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nbridge.subscribe(({ detail: { type, data } }) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme')\n    schemeAttribute.value = data.scheme ? data.scheme : 'client_light'\n    document.body.attributes.setNamedItem(schemeAttribute)\n  }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => { }); //runtime download\n}\n"],"sourceRoot":""}